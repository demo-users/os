#include <stdio.h>
#include <stdlib.h>

int binary_search(int arr[], int n, int target) {
    int low = 0, high = n - 1;
    while (low <= high) {
        int mid = (low + high) / 2;
        if (arr[mid] == target) return mid;
        else if (arr[mid] < target) low = mid + 1;
        else high = mid - 1;
    }
    return -1;
}

int main(int argc, char *argv[]) {
    if (argc < 2) {
        printf("No array passed\n");
        return 1;
    }

    int n = argc - 1;
    int *arr = malloc(n * sizeof(int));
    if (!arr) {
        perror("malloc failed");
        return 1;
    }

    for (int i = 0; i < n; i++) {
        arr[i] = atoi(argv[i + 1]);
    }

    printf("Sorted array received in child:\n");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    printf("Enter number to search: ");
    int target;
    if (scanf("%d", &target) != 1) {
        printf("Invalid input\n");
        free(arr);
        return 1;
    }

    int idx = binary_search(arr, n, target);
    if (idx == -1)
        printf("Element %d not found\n", target);
    else
        printf("Element %d found at index %d\n", target, idx);

    free(arr);
    return 0;
}

